{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About This is the homepage def foo(): print('bar') foo() >> bar","title":"About"},{"location":"#about","text":"This is the homepage def foo(): print('bar') foo() >> bar","title":"About"},{"location":"api/","text":"API Reference get_specific_stops ( stops , status = None ) Returns a dataframe containing just the specified stops, if present in the NaPTAN dataset. Parameters: stops ( Iterable [ str ] ) \u2013 Iterable of the desired stops' ATCO code, as strings. For example: ['2500DCL4060', '1100DEA10139', '068000000322'] status ( Optional [ str ] ) \u2013 Return only NaPTAN stops with specific status. Must be one of: None, 'active', 'inactive', or 'pending'. Defaults to None. Returns: pd . DataFrame \u2013 The specified stops and their attributes. get_area_stops ( area_codes , status = None ) Returns a dataframe containing all the stops that share the specified area codes. Parameters: area_codes ( Iterable [ str ] ) \u2013 Iterable of the desired area codes as strings. For example: ['250', '110'] status ( Optional [ str ] ) \u2013 Return only NaPTAN stops with specific status. Must be one of: None, 'active', 'inactive', or 'pending'. Returns: pd . DataFrame \u2013 All available stops and their attributes that share the specified area codes. get_all_stops ( status = None ) Returns a dataframe with all the available nationwide NaPTAN stops. Parameters: status ( Optional [ str ] ) \u2013 Return only NaPTAN stops with specific status. Must be one of: None, 'active', 'inactive', or 'pending'. Defaults to None. Returns: pd . DataFrame \u2013 All available NaPTAN stops and their attributes in a dataframe. export_geojson ( df , path ) Export a dataframe of stops as a .json (geojson) file. Parameters: df ( pd . DataFrame ) \u2013 Input data frame of stops returned from naptan functions. path ( str ) \u2013 Output path. e.g. '~/path/to/dir/naptan_stops.json' create_map ( df , disable_cluster_zoom = 17 ) Create a folium.Map object displaying the stops. Parameters: df ( pd . DataFrame ) \u2013 Input data frame of stops returned from naptan functions. disable_cluster_zoom ( int ) \u2013 The zoom level at which point points are no longer clustered on the map, by default 17. Returns: folium . Map \u2013 A folium.Map object that can be used interactively or embedded in a webpage. view_map ( df , disable_cluster_zoom = 17 ) View the stops on a folium-generated map, in the browser. Parameters: df ( pd . DataFrame ) \u2013 Input data frame of stops returned from naptan functions. disable_cluster_zoom ( int ) \u2013 The zoom level at which point points are no longer clustered on the map, by default 17.","title":"API"},{"location":"api/#api-reference","text":"","title":"API Reference"},{"location":"api/#naptan.naptan.get_specific_stops","text":"Returns a dataframe containing just the specified stops, if present in the NaPTAN dataset. Parameters: stops ( Iterable [ str ] ) \u2013 Iterable of the desired stops' ATCO code, as strings. For example: ['2500DCL4060', '1100DEA10139', '068000000322'] status ( Optional [ str ] ) \u2013 Return only NaPTAN stops with specific status. Must be one of: None, 'active', 'inactive', or 'pending'. Defaults to None. Returns: pd . DataFrame \u2013 The specified stops and their attributes.","title":"get_specific_stops()"},{"location":"api/#naptan.naptan.get_area_stops","text":"Returns a dataframe containing all the stops that share the specified area codes. Parameters: area_codes ( Iterable [ str ] ) \u2013 Iterable of the desired area codes as strings. For example: ['250', '110'] status ( Optional [ str ] ) \u2013 Return only NaPTAN stops with specific status. Must be one of: None, 'active', 'inactive', or 'pending'. Returns: pd . DataFrame \u2013 All available stops and their attributes that share the specified area codes.","title":"get_area_stops()"},{"location":"api/#naptan.naptan.get_all_stops","text":"Returns a dataframe with all the available nationwide NaPTAN stops. Parameters: status ( Optional [ str ] ) \u2013 Return only NaPTAN stops with specific status. Must be one of: None, 'active', 'inactive', or 'pending'. Defaults to None. Returns: pd . DataFrame \u2013 All available NaPTAN stops and their attributes in a dataframe.","title":"get_all_stops()"},{"location":"api/#naptan.naptan.export_geojson","text":"Export a dataframe of stops as a .json (geojson) file. Parameters: df ( pd . DataFrame ) \u2013 Input data frame of stops returned from naptan functions. path ( str ) \u2013 Output path. e.g. '~/path/to/dir/naptan_stops.json'","title":"export_geojson()"},{"location":"api/#naptan.naptan.create_map","text":"Create a folium.Map object displaying the stops. Parameters: df ( pd . DataFrame ) \u2013 Input data frame of stops returned from naptan functions. disable_cluster_zoom ( int ) \u2013 The zoom level at which point points are no longer clustered on the map, by default 17. Returns: folium . Map \u2013 A folium.Map object that can be used interactively or embedded in a webpage.","title":"create_map()"},{"location":"api/#naptan.naptan.view_map","text":"View the stops on a folium-generated map, in the browser. Parameters: df ( pd . DataFrame ) \u2013 Input data frame of stops returned from naptan functions. disable_cluster_zoom ( int ) \u2013 The zoom level at which point points are no longer clustered on the map, by default 17.","title":"view_map()"}]}